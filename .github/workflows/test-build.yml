name: Creating Python App

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: write

jobs:
  build-windows:
    name: Build windows
    runs-on: windows-latest
    steps:
      - name: Checkout code 🔍
        uses: actions/checkout@v2
      - name: Installing Chocolatey ⬇️
        run: Set-ExecutionPolicy Bypass -Scope Process -Force; [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; iex ((New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1'))
      - name: Installing Make ⬇️
        run: choco install make
      - name: Installing dependencies 🛠️
        run: make install
      - name: Building Projects ⚙️
        run: make build-app
      - name: Copy exe to root ✨
        run: cp ./dist/main.exe ./the_snowy_paths_windows.exe
      - name: Upload artifact release 🚀
        uses: actions/upload-artifact@v2
        with:
          name: artifact-windows
          path: ./the_snowy_paths_windows.exe
  
  build-ubuntu:
    name: Build ubuntu
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code 🔍
        uses: actions/checkout@v2
      - name: Installing make ⬇️
        run:  sudo apt-get install make
      - name: Installing dependencies 🛠️
        run: make install
      - name: Building projects ⚙️
        run: make build-app
      - name: Copy exe to root ✨
        run: cp ./dist/main ./the_snowy_paths_ubuntu
      - name: Upload artifact release 🚀
        uses: actions/upload-artifact@v2
        with:
          name: artifact-ubuntu
          path: ./the_snowy_paths_ubuntu

  build-macos:
    name: Build macos
    runs-on: macos-latest
    steps:
      - name: Checkout code 🔍
        uses: actions/checkout@v2
      - name: Installing Make ⬇️
        run: brew install make
      - name: Installing dependencies 🛠️
        run: make install
      - name: Building projects ⚙️
        run: make build-app
      - name: Copy exe to root ✨
        run: cp ./dist/main ./the_snowy_paths_macos
      - name: Upload artifact release 🚀
        uses: actions/upload-artifact@v2
        with:
          name: artifact-macos
          path: ./the_snowy_paths_macos

  release-project:
    name: Release project
    runs-on: ubuntu-latest
    needs: [ build-windows, build-macos, build-ubuntu ]
    steps:
      - name: Download Windows artifact content ⬇️
        uses: actions/download-artifact@v2
        with:
          name: artifact-windows

      - name: Download MacOS artifact content ⬇️
        uses: actions/download-artifact@v2
        with:
          name: artifact-macos

      - name: Download Ubuntu artifact content ⬇️
        uses: actions/download-artifact@v2
        with:
          name: artifact-ubuntu

      - name: Creating Release ✏️
        uses: actions/create-release@v1
        id: create_release
        with:
          release_name: ${{ steps.version.outputs.version }}
          tag_name: ${{ github.ref }}
        env:
          GITHUB_TOKEN: ${{ github.token }}

      - name: Upload Windows Release 🚀
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./the_snowy_paths_windows.exe
          asset_name: the_snowy_paths_windows-v${{ github.run_number }}.exe
          asset_content_type: application/octet-stream

      - name: Upload MacoOS Release 🚀
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./the_snowy_paths_macos
          asset_name: the_snowy_paths_macos-v${{ github.run_number }}
          asset_content_type: application/octet-stream

      - name: Upload Ubuntu Release 🚀
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with: 
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./the_snowy_paths_ubuntu
          asset_name: the_snowy_paths_ubuntu-v${{ github.run_number }}
          asset_content_type: application/octet-stream